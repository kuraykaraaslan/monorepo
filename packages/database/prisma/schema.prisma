generator client {
  provider = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
  output = "../generated/client"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId    String   @id @default(cuid())
  email     String   @unique
  phone     String?   @unique
  password  String
  name      String?

  userRole      UserRole     @default(USER)
  userStatus    UserStatus   @default(ACTIVE)

  //Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  //Password reset
  resetToken String?
  resetTokenExpiry DateTime?

  //Profile
  profilePicture String?

  //OTP verification
  otpEnabled Boolean @default(false)
  otpEnabledAt DateTime?
  otpStatusChangeToken String?
  otpStatusChangeTokenExpiry DateTime?

  userSessions UserSession[]
  userSocialAccounts UserSocialAccount[]

  //index
  @@index([email])
  @@index([phone])
}


model UserSession {
  sessionId  String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [userId], onDelete: Cascade)

  sessionToken String  @unique
  sessionExpiry DateTime
  sessionAgent String

  //OTP verification
  otpNeeded  Boolean @default(false)
  otpToken   String?
  otpTokenExpiry DateTime?

  // User Agent
  ip        String?
  os        String?
  device    String?
  browser   String?
  city      String?
  state     String?
  country   String?

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([userId])
}

model UserSocialAccount {
  
  userSocialAccountId String   @id @default(cuid())
  userId         String
  user           User     @relation(fields: [userId], references: [userId], onDelete: Cascade)

  provider       String  // google, facebook, etc
  providerId     String   @unique
  accessToken    String?
  refreshToken   String?
  tokenExpiry    DateTime?
  profilePicture String?
  profileUrl     String?
  scopes         String?  // Store granted scopes as a comma-separated list if needed

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([provider, providerId])
}

enum UserRole {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}